{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar arraylike2object = require( '@stdlib/array-base-arraylike2object' );\n\n\n// FUNCTIONS //\n\n/**\n* Fills all elements within a portion of an indexed array according to a callback function.\n*\n* @private\n* @param {Collection} x - input array\n* @param {integer} start - starting index (inclusive)\n* @param {integer} end - ending index (exclusive)\n* @param {Function} fcn - callback function\n* @param {*} thisArg - callback function execution context\n* @returns {Array} output array\n*\n* @example\n* function fcn() {\n*     return 5;\n* }\n*\n* var x = [ 1, 2, 3, 4 ];\n*\n* var out = indexed( x, 1, 3, fcn, {} );\n* // returns [ 1, 5, 5, 4 ]\n*/\nfunction indexed( x, start, end, fcn, thisArg ) {\n\tvar i;\n\tfor ( i = start; i < end; i++ ) {\n\t\tx[ i ] = fcn.call( thisArg, x[ i ], i, x );\n\t}\n\treturn x;\n}\n\n/**\n* Fills all elements within a portion of an accessor array according to a callback function.\n*\n* @private\n* @param {Object} x - input array object\n* @param {integer} start - starting index (inclusive)\n* @param {integer} end - ending index (exclusive)\n* @param {Function} fcn - callback function\n* @param {*} thisArg - callback function execution context\n* @returns {AccessorArray} modified input array\n*\n* @example\n* var toAccessorArray = require( '@stdlib/array-base-to-accessor-array' );\n* var arraylike2object = require( '@stdlib/array-base-arraylike2object' );\n*\n* function fcn() {\n*     return 5;\n* }\n*\n* var x = toAccessorArray( [ 1, 2, 3, 4 ] );\n* var obj = arraylike2object( x );\n*\n* var out = accessors( obj, 1, 3, fcn, {} );\n* // returns <AccessorArray>\n*\n* var v = x.get( 0 );\n* // returns 1\n*\n* v = x.get( 1 );\n* // returns 5\n*\n* v = x.get( 2 );\n* // returns 5\n*\n* v = x.get( 3 );\n* // returns 4\n*/\nfunction accessors( x, start, end, fcn, thisArg ) {\n\tvar data;\n\tvar get;\n\tvar set;\n\tvar i;\n\n\tdata = x.data;\n\tget = x.accessors[ 0 ];\n\tset = x.accessors[ 1 ];\n\tfor ( i = start; i < end; i++ ) {\n\t\tset( data, i, fcn.call( thisArg, get( data, i ), i, data ) );\n\t}\n\treturn data;\n}\n\n\n// MAIN //\n\n/**\n* Fills all elements within a portion of an array according to a callback function.\n*\n* @param {Collection} x - input array\n* @param {integer} start - starting index (inclusive)\n* @param {integer} end - ending index (exclusive)\n* @param {Function} fcn - callback function\n* @param {*} [thisArg] - callback function execution context\n* @returns {Collection} output array\n*\n* @example\n* function fcn() {\n*     return 5;\n* }\n*\n* var x = [ 1, 2, 3, 4 ];\n*\n* var out = fillBy( x, 1, 3, fcn );\n* // returns [ 1, 5, 5, 4 ]\n*\n* var bool = ( out === x );\n* // returns true\n*\n* @example\n* function fcn() {\n*     return 5;\n* }\n*\n* var Int32Array = require( '@stdlib/array-int32' );\n*\n* var x = new Int32Array( [ 1, 2, 3, 4 ] );\n*\n* var out = fillBy( x, 1, 3, fcn );\n* // returns <Int32Array>[ 1, 5, 5, 4 ]\n*\n* var bool = ( out === x );\n* // returns true\n*/\nfunction fillBy( x, start, end, fcn, thisArg ) {\n\tvar obj;\n\tif ( start < 0 ) {\n\t\tstart += x.length;\n\t\tif ( start < 0 ) {\n\t\t\tstart = 0;\n\t\t}\n\t}\n\tif ( end < 0 ) {\n\t\tend += x.length; // if `end` is still negative, that is fine, as `x` will be returned un-mutated\n\t} else if ( end > x.length ) {\n\t\tend = x.length;\n\t}\n\tobj = arraylike2object( x );\n\tif ( obj.accessorProtocol ) {\n\t\treturn accessors( obj, start, end, fcn, thisArg );\n\t}\n\treturn indexed( x, start, end, fcn, thisArg );\n}\n\n\n// EXPORTS //\n\nmodule.exports = fillBy;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Fill all elements within a portion of an array according to a callback function.\n*\n* @module @stdlib/array-base-fill-by\n*\n* @example\n* var fillBy = require( '@stdlib/array-base-fill-by' );\n*\n* function fcn() {\n*     return 5;\n* }\n*\n* var x = [ 1, 2, 3, 4 ];\n*\n* var out = fillBy( x, 1, 3, fcn );\n* // returns [ 1, 5, 5, 4 ]\n*\n* var bool = ( out === x );\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAmB,QAAS,qCAAsC,EA0BtE,SAASC,EAASC,EAAGC,EAAOC,EAAKC,EAAKC,EAAU,CAC/C,IAAIC,EACJ,IAAMA,EAAIJ,EAAOI,EAAIH,EAAKG,IACzBL,EAAGK,CAAE,EAAIF,EAAI,KAAMC,EAASJ,EAAGK,CAAE,EAAGA,EAAGL,CAAE,EAE1C,OAAOA,CACR,CAuCA,SAASM,EAAWN,EAAGC,EAAOC,EAAKC,EAAKC,EAAU,CACjD,IAAIG,EACAC,EACAC,EACAJ,EAKJ,IAHAE,EAAOP,EAAE,KACTQ,EAAMR,EAAE,UAAW,CAAE,EACrBS,EAAMT,EAAE,UAAW,CAAE,EACfK,EAAIJ,EAAOI,EAAIH,EAAKG,IACzBI,EAAKF,EAAMF,EAAGF,EAAI,KAAMC,EAASI,EAAKD,EAAMF,CAAE,EAAGA,EAAGE,CAAK,CAAE,EAE5D,OAAOA,CACR,CA2CA,SAASG,EAAQV,EAAGC,EAAOC,EAAKC,EAAKC,EAAU,CAC9C,IAAIO,EAaJ,OAZKV,EAAQ,IACZA,GAASD,EAAE,OACNC,EAAQ,IACZA,EAAQ,IAGLC,EAAM,EACVA,GAAOF,EAAE,OACEE,EAAMF,EAAE,SACnBE,EAAMF,EAAE,QAETW,EAAMb,EAAkBE,CAAE,EACrBW,EAAI,iBACDL,EAAWK,EAAKV,EAAOC,EAAKC,EAAKC,CAAQ,EAE1CL,EAASC,EAAGC,EAAOC,EAAKC,EAAKC,CAAQ,CAC7C,CAKAP,EAAO,QAAUa,ICjIjB,IAAIE,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "arraylike2object", "indexed", "x", "start", "end", "fcn", "thisArg", "i", "accessors", "data", "get", "set", "fillBy", "obj", "main"]
}
